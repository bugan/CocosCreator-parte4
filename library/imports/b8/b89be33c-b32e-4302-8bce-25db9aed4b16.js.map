{"version":3,"sources":["..\\..\\..\\..\\assets\\Scripts/assets\\Scripts\\ControleDeAnimacao.js"],"names":["cc","Class","extends","Component","properties","anguloDiagonal","type","Float","default","slide","range","_animacao","Animation","_senoMinimo","_cossenoMinimo","onLoad","getComponent","play","Math","cos","grausParaRadianos","sin","mudaAnimacao","direcao","estado","proximaAnimacao","angulo","calcularAngulo","cosseno","abs","seno","verificarEixo","x","y","animacaoEstaTocando","animacao","getAnimationState","isPlaying","valorEixo","sentidoPositivo","sentidoNegativo","anguloEmRadianos","atan2","anguloEmGraus","PI"],"mappings":";;;;;;AAAAA,GAAGC,KAAH,CAAS;AACLC,aAASF,GAAGG,SADP;;AAGLC,gBAAY;AACRC,wBAAgB;AACZC,kBAAMN,GAAGO,KADG;AAEZC,qBAAS,CAFG;AAGZC,mBAAO,IAHK;AAIZC,mBAAO,CAAC,CAAD,EAAI,EAAJ;AAJK,SADR;AAORC,mBAAWX,GAAGY,SAPN;AAQRC,qBAAab,GAAGO,KARR;AASRO,wBAAgBd,GAAGO;AATX,KAHP;;AAeLQ,YAAQ,kBAAY;AAChB,aAAKJ,SAAL,GAAiB,KAAKK,YAAL,CAAkBhB,GAAGY,SAArB,CAAjB;AACA,aAAKD,SAAL,CAAeM,IAAf,CAAoB,YAApB;;AAEA,aAAKH,cAAL,GAAsBI,KAAKC,GAAL,CAAU,KAAKC,iBAAL,CAAuB,KAAK,KAAKf,cAAjC,CAAV,CAAtB;AACA,aAAKQ,WAAL,GAAmBK,KAAKG,GAAL,CAAU,KAAKD,iBAAL,CAAuB,KAAKf,cAA5B,CAAV,CAAnB;AAEH,KAtBI;;AAwBLiB,kBAAc,sBAAUC,OAAV,EAAmBC,MAAnB,EAA2B;AACrC,YAAIC,kBAAkBD,MAAtB;;AAEA,YAAIE,SAAS,KAAKC,cAAL,CAAoBJ,OAApB,CAAb;;AAEA,YAAIK,UAAUV,KAAKC,GAAL,CAASO,MAAT,CAAd;AACAE,kBAAUV,KAAKW,GAAL,CAASD,OAAT,CAAV;;AAEA,YAAIE,OAAOZ,KAAKG,GAAL,CAASK,MAAT,CAAX;AACAI,eAAOZ,KAAKW,GAAL,CAASC,IAAT,CAAP;;AAEA,YAAIF,WAAW,KAAKd,cAApB,EAAoC;AAChCW,+BAAmB,KAAKM,aAAL,CAAmBR,QAAQS,CAA3B,EAA8B,SAA9B,EAAyC,UAAzC,CAAnB;AACH;AACD,YAAIF,QAAQ,KAAKjB,WAAjB,EAA8B;AAC1BY,+BAAmB,KAAKM,aAAL,CAAmBR,QAAQU,CAA3B,EAA8B,MAA9B,EAAsC,OAAtC,CAAnB;AACH;;AAED,YAAI,CAAC,KAAKC,mBAAL,CAAyBT,eAAzB,CAAL,EAAgD;AAC5C,iBAAKd,SAAL,CAAeM,IAAf,CAAoBQ,eAApB;AACH;AAEJ,KA9CI;;AAgDLS,yBAAqB,6BAAUC,QAAV,EAAoB;AACrC,eAAO,KAAKxB,SAAL,CAAeyB,iBAAf,CAAiCD,QAAjC,EAA2CE,SAAlD;AACH,KAlDI;;AAoDLN,mBAAe,uBAAUO,SAAV,EAAqBC,eAArB,EAAsCC,eAAtC,EAAuD;AAClE,YAAIF,YAAY,CAAhB,EAAmB;AACf,mBAAOC,eAAP;AACH,SAFD,MAEO,IAAID,YAAY,CAAhB,EAAmB;AACtB,mBAAOE,eAAP;AACH;AACJ,KA1DI;;AA4DLb,oBAAgB,wBAAUJ,OAAV,EAAmB;AAC/B,YAAIkB,mBAAmBvB,KAAKwB,KAAL,CAAWnB,QAAQU,CAAnB,EAAsBV,QAAQS,CAA9B,CAAvB;AACA,eAAOS,gBAAP;AACH,KA/DI;;AAiELrB,uBAAoB,2BAASqB,gBAAT,EAA0B;AAC1C,YAAIE,gBAAgBF,oBAAoBvB,KAAK0B,EAAL,GAAU,GAA9B,CAApB;AACA,eAAOD,aAAP;AACH;;AApEI,CAAT","file":"ControleDeAnimacao.js","sourceRoot":"..\\..\\..\\..\\assets\\Scripts","sourcesContent":["cc.Class({\n    extends: cc.Component,\n\n    properties: {\n        anguloDiagonal: {\n            type: cc.Float,\n            default: 0,\n            slide: true,\n            range: [0, 45],\n        },\n        _animacao: cc.Animation,\n        _senoMinimo: cc.Float,\n        _cossenoMinimo: cc.Float,\n    },\n\n    onLoad: function () {\n        this._animacao = this.getComponent(cc.Animation);\n        this._animacao.play(\"AndarBaixo\");\n\n        this._cossenoMinimo = Math.cos( this.grausParaRadianos(90 - this.anguloDiagonal) );\n        this._senoMinimo = Math.sin( this.grausParaRadianos(this.anguloDiagonal) );\n\n    },\n\n    mudaAnimacao: function (direcao, estado) {\n        let proximaAnimacao = estado;\n        \n        let angulo = this.calcularAngulo(direcao);\n\n        let cosseno = Math.cos(angulo);\n        cosseno = Math.abs(cosseno);\n\n        let seno = Math.sin(angulo);\n        seno = Math.abs(seno);\n\n        if (cosseno >= this._cossenoMinimo) {\n            proximaAnimacao += this.verificarEixo(direcao.x, \"Direita\", \"Esquerda\");\n        }\n        if (seno >= this._senoMinimo) {\n            proximaAnimacao += this.verificarEixo(direcao.y, \"Cima\", \"Baixo\");\n        }\n        \n        if (!this.animacaoEstaTocando(proximaAnimacao)) {\n            this._animacao.play(proximaAnimacao);\n        }\n        \n    },\n\n    animacaoEstaTocando: function (animacao) {\n        return this._animacao.getAnimationState(animacao).isPlaying\n    },\n\n    verificarEixo: function (valorEixo, sentidoPositivo, sentidoNegativo) {\n        if (valorEixo > 0) {\n            return sentidoPositivo;\n        } else if (valorEixo < 0) {\n            return sentidoNegativo;\n        }\n    },\n\n    calcularAngulo: function (direcao) {\n        let anguloEmRadianos = Math.atan2(direcao.y, direcao.x);\n        return anguloEmRadianos;\n    },\n\n    grausParaRadianos : function(anguloEmRadianos){\n        let anguloEmGraus = anguloEmRadianos * (Math.PI / 180);\n        return anguloEmGraus;\n    }\n\n});\n"]}